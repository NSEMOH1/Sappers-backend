
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.MemberScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  first_name: 'first_name',
  title: 'title',
  last_name: 'last_name',
  other_name: 'other_name',
  gender: 'gender',
  phone: 'phone',
  address: 'address',
  state_of_origin: 'state_of_origin',
  role: 'role',
  lga: 'lga',
  date_of_birth: 'date_of_birth',
  created_at: 'created_at',
  updated_at: 'updated_at',
  profile_picture: 'profile_picture',
  monthlyDeduction: 'monthlyDeduction',
  service_number: 'service_number',
  pin: 'pin',
  status: 'status'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  full_name: 'full_name',
  department: 'department',
  password: 'password',
  email: 'email'
};

exports.Prisma.BankScalarFieldEnum = {
  id: 'id',
  name: 'name',
  account_number: 'account_number',
  memberId: 'memberId'
};

exports.Prisma.KycInfoScalarFieldEnum = {
  id: 'id',
  identification: 'identification',
  id_card: 'id_card',
  signature: 'signature',
  memberId: 'memberId'
};

exports.Prisma.NextOfKinScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  title: 'title',
  relationship: 'relationship',
  gender: 'gender',
  phone: 'phone',
  email: 'email',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  memberId: 'memberId',
  title: 'title',
  message: 'message',
  type: 'type',
  status: 'status',
  actionType: 'actionType',
  actionId: 'actionId',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  type: 'type',
  description: 'description',
  reference: 'reference',
  updatedAt: 'updatedAt',
  status: 'status',
  createdAt: 'createdAt',
  memberId: 'memberId',
  savingId: 'savingId'
};

exports.Prisma.SavingScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  memberId: 'memberId',
  categoryId: 'categoryId',
  reference: 'reference'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Rank = exports.$Enums.Rank = {
  AVM: 'AVM',
  AIR_CDRE: 'AIR_CDRE',
  GP_CAPT: 'GP_CAPT',
  WG_CDR: 'WG_CDR',
  SQN_LDR: 'SQN_LDR',
  FLT_LT: 'FLT_LT',
  FG_OFFR: 'FG_OFFR',
  PLT_OFFR: 'PLT_OFFR',
  AWO: 'AWO',
  MWO: 'MWO',
  WO: 'WO',
  FS: 'FS',
  SGT: 'SGT',
  CPL: 'CPL',
  LCPL: 'LCPL',
  ACM: 'ACM'
};

exports.Department = exports.$Enums.Department = {
  IT: 'IT',
  ACCOUNT: 'ACCOUNT',
  ARCHIVE: 'ARCHIVE',
  LEGAL: 'LEGAL',
  OPERATION: 'OPERATION',
  CUSTOMER_CARE: 'CUSTOMER_CARE'
};

exports.Gender = exports.$Enums.Gender = {
  MALE: 'MALE',
  FEMALE: 'FEMALE'
};

exports.Relationship = exports.$Enums.Relationship = {
  SPOUSE: 'SPOUSE',
  PARTNER: 'PARTNER',
  FATHER: 'FATHER',
  MOTHER: 'MOTHER',
  SON: 'SON',
  DAUGHTER: 'DAUGHTER',
  GUARDIAN: 'GUARDIAN',
  SIBLING: 'SIBLING',
  OTHER: 'OTHER'
};

exports.TransactionType = exports.$Enums.TransactionType = {
  LOAN_DISBURSEMENT: 'LOAN_DISBURSEMENT',
  LOAN_REPAYMENT: 'LOAN_REPAYMENT',
  SAVINGS_DEPOSIT: 'SAVINGS_DEPOSIT',
  SAVINGS_WITHDRAWAL: 'SAVINGS_WITHDRAWAL',
  FEE: 'FEE',
  ADJUSTMENT: 'ADJUSTMENT',
  LOAN_APPROVED: 'LOAN_APPROVED',
  LOAN_REJECTED: 'LOAN_REJECTED',
  PENDING: 'PENDING',
  CASH_REFUND: 'CASH_REFUND',
  CASH_PAYMENT: 'CASH_PAYMENT'
};

exports.TransactionStatus = exports.$Enums.TransactionStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  REVERSED: 'REVERSED'
};

exports.LoanStatus = exports.$Enums.LoanStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  ACTIVE: 'ACTIVE',
  COMPLETED: 'COMPLETED',
  DEFAULTED: 'DEFAULTED',
  PENDING_VERIFICATION: 'PENDING_VERIFICATION',
  DISBURSED: 'DISBURSED'
};

exports.RepaymentStatus = exports.$Enums.RepaymentStatus = {
  PENDING: 'PENDING',
  PAID: 'PAID',
  LATE: 'LATE',
  DEFAULTED: 'DEFAULTED'
};

exports.MemberStatus = exports.$Enums.MemberStatus = {
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  PENDING: 'PENDING',
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE'
};

exports.UserStatus = exports.$Enums.UserStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE'
};

exports.Role = exports.$Enums.Role = {
  MEMBER: 'MEMBER',
  ADMIN: 'ADMIN'
};

exports.Title = exports.$Enums.Title = {
  MR: 'MR',
  MRS: 'MRS',
  MISS: 'MISS'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  SUCCESS: 'SUCCESS',
  INFO: 'INFO',
  WARNING: 'WARNING',
  ERROR: 'ERROR'
};

exports.NotificationStatus = exports.$Enums.NotificationStatus = {
  UNREAD: 'UNREAD',
  READ: 'READ',
  ARCHIVED: 'ARCHIVED'
};

exports.SavingStatus = exports.$Enums.SavingStatus = {
  PENDING: 'PENDING',
  FAILED: 'FAILED',
  COMPLETED: 'COMPLETED'
};

exports.Prisma.ModelName = {
  Member: 'Member',
  User: 'User',
  Bank: 'Bank',
  KycInfo: 'KycInfo',
  NextOfKin: 'NextOfKin',
  Notification: 'Notification',
  Transaction: 'Transaction',
  Saving: 'Saving'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/macbookpro/Desktop/sappers-backend/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/macbookpro/Desktop/sappers-backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Rank {\n  AVM\n  AIR_CDRE\n  GP_CAPT\n  WG_CDR\n  SQN_LDR\n  FLT_LT\n  FG_OFFR\n  PLT_OFFR\n  AWO\n  MWO\n  WO\n  FS\n  SGT\n  CPL\n  LCPL\n  ACM\n}\n\nenum Department {\n  IT\n  ACCOUNT\n  ARCHIVE\n  LEGAL\n  OPERATION\n  CUSTOMER_CARE\n}\n\nenum Gender {\n  MALE\n  FEMALE\n}\n\nenum Relationship {\n  SPOUSE\n  PARTNER\n  FATHER\n  MOTHER\n  SON\n  DAUGHTER\n  GUARDIAN\n  SIBLING\n  OTHER\n}\n\nenum TransactionType {\n  LOAN_DISBURSEMENT\n  LOAN_REPAYMENT\n  SAVINGS_DEPOSIT\n  SAVINGS_WITHDRAWAL\n  FEE\n  ADJUSTMENT\n  LOAN_APPROVED\n  LOAN_REJECTED\n  PENDING\n  CASH_REFUND\n  CASH_PAYMENT\n}\n\nenum TransactionStatus {\n  PENDING\n  COMPLETED\n  FAILED\n  REVERSED\n}\n\nenum LoanStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  ACTIVE\n  COMPLETED\n  DEFAULTED\n  PENDING_VERIFICATION\n  DISBURSED\n}\n\nenum RepaymentStatus {\n  PENDING\n  PAID\n  LATE\n  DEFAULTED\n}\n\nenum MemberStatus {\n  APPROVED\n  REJECTED\n  PENDING\n  ACTIVE\n  INACTIVE\n}\n\nenum UserStatus {\n  ACTIVE\n  INACTIVE\n}\n\nenum Role {\n  MEMBER\n  ADMIN\n}\n\nenum Title {\n  MR\n  MRS\n  MISS\n}\n\nenum NotificationType {\n  SUCCESS\n  INFO\n  WARNING\n  ERROR\n}\n\nenum NotificationStatus {\n  UNREAD\n  READ\n  ARCHIVED\n}\n\nenum SavingStatus {\n  PENDING\n  FAILED\n  COMPLETED\n}\n\nmodel Member {\n  id               String         @id @default(cuid())\n  email            String         @unique\n  password         String?\n  first_name       String\n  title            Title\n  last_name        String\n  other_name       String\n  gender           Gender\n  phone            String         @unique\n  address          String\n  state_of_origin  String\n  role             Role           @default(MEMBER)\n  lga              String\n  date_of_birth    DateTime\n  created_at       DateTime       @default(now())\n  updated_at       DateTime       @updatedAt\n  profile_picture  String\n  monthlyDeduction Decimal        @default(0) @db.Decimal(10, 2)\n  service_number   String?        @unique\n  pin              String\n  status           MemberStatus   @default(PENDING)\n  kycInfo          KycInfo?\n  bank             Bank[]\n  savings          Saving[]\n  transactions     Transaction[]\n  Notification     Notification[]\n\n  @@map(\"member\")\n}\n\nmodel User {\n  id           String         @id @default(cuid())\n  full_name    String\n  department   Department\n  password     String\n  email        String\n  Notification Notification[]\n\n  @@map(\"user\")\n}\n\nmodel Bank {\n  id             String @id @default(cuid())\n  name           String\n  account_number String\n  member         Member @relation(fields: [memberId], references: [id], onDelete: Cascade)\n  memberId       String\n\n  @@map(\"banks\")\n}\n\nmodel KycInfo {\n  id             String @id @default(cuid())\n  identification String\n  id_card        String\n  signature      String\n  member         Member @relation(fields: [memberId], references: [id], onDelete: Cascade)\n  memberId       String @unique\n\n  @@map(\"kyc_info\")\n}\n\nmodel NextOfKin {\n  id           String       @id @default(cuid())\n  first_name   String\n  last_name    String\n  title        Title\n  relationship Relationship\n  gender       Gender\n  phone        String       @unique\n  email        String\n  address      String?\n  createdAt    DateTime     @default(now())\n  updatedAt    DateTime     @updatedAt\n\n  @@map(\"next_of_kin\")\n}\n\nmodel Notification {\n  id         String             @id @default(cuid())\n  memberId   String?\n  title      String\n  message    String\n  type       NotificationType\n  status     NotificationStatus @default(UNREAD)\n  actionType String\n  actionId   String?\n  metadata   Json?\n  createdAt  DateTime           @default(now())\n  updatedAt  DateTime           @updatedAt\n  member     Member?            @relation(fields: [memberId], references: [id], onDelete: Cascade)\n  User       User?              @relation(fields: [userId], references: [id])\n  userId     String?\n\n  @@map(\"notifications\")\n}\n\nmodel Transaction {\n  id          String            @id @default(cuid())\n  amount      Decimal           @db.Decimal(15, 2)\n  type        TransactionType\n  description String\n  reference   String?\n  updatedAt   DateTime          @updatedAt\n  status      TransactionStatus @default(COMPLETED)\n  createdAt   DateTime          @default(now())\n  // loan        Loan?             @relation(fields: [loanId], references: [id])\n  // loanId      String?\n  // savings     Saving?           @relation(fields: [savingId], references: [id])\n  // savingId    String?\n  member      Member?           @relation(fields: [memberId], references: [id])\n  memberId    String?\n  Saving      Saving?           @relation(fields: [savingId], references: [id])\n  savingId    String?\n\n  @@map(\"transactions\")\n}\n\nmodel Saving {\n  id         String   @id @default(cuid())\n  amount     Decimal  @db.Decimal(15, 2)\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n  memberId   String\n  member     Member   @relation(fields: [memberId], references: [id])\n  categoryId String\n  reference  String\n\n  Transaction Transaction[]\n\n  @@map(\"savings\")\n}\n",
  "inlineSchemaHash": "b33057af78a56b9a9fc82bca6c67628eef1b1bf7fa873c754165883ed4f5796f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Member\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"first_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"enum\",\"type\":\"Title\"},{\"name\":\"last_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"other_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state_of_origin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"lga\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date_of_birth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"profile_picture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"monthlyDeduction\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"service_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"MemberStatus\"},{\"name\":\"kycInfo\",\"kind\":\"object\",\"type\":\"KycInfo\",\"relationName\":\"KycInfoToMember\"},{\"name\":\"bank\",\"kind\":\"object\",\"type\":\"Bank\",\"relationName\":\"BankToMember\"},{\"name\":\"savings\",\"kind\":\"object\",\"type\":\"Saving\",\"relationName\":\"MemberToSaving\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"MemberToTransaction\"},{\"name\":\"Notification\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"MemberToNotification\"}],\"dbName\":\"member\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"full_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"enum\",\"type\":\"Department\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Notification\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"user\"},\"Bank\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"BankToMember\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"banks\"},\"KycInfo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identification\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_card\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signature\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"KycInfoToMember\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"kyc_info\"},\"NextOfKin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"first_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"enum\",\"type\":\"Title\"},{\"name\":\"relationship\",\"kind\":\"enum\",\"type\":\"Relationship\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"next_of_kin\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"NotificationStatus\"},{\"name\":\"actionType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToNotification\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"notifications\"},\"Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"TransactionType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToTransaction\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Saving\",\"kind\":\"object\",\"type\":\"Saving\",\"relationName\":\"SavingToTransaction\"},{\"name\":\"savingId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"transactions\"},\"Saving\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToSaving\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"SavingToTransaction\"}],\"dbName\":\"savings\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

